package components

import (
	"fmt"

	"github.com/hay-i/chronologger/views"
)

css btn() {
	display: inline-block;
	border: 0;
	background-color: #00FF00;
	border-radius: 999px;
	padding: 1rem 2rem;
	transition: 150ms;
	cursor: pointer;
}

templ base() {
	<!DOCTYPE html>
	<html lang="en">
		{ children... }
	</html>
}

templ head() {
	<head>
		<meta charset="UTF-8"/>
		<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
		<link rel="stylesheet" href="/static/scss/styles.css"/>
		<script src="/static/js/main.js"></script>
		<script src="/static/js/htmx.min.js"></script>
		<script src="/static/js/htmx-class-tools.js"></script>
		<title>Chronologger</title>
	</head>
}

templ body() {
	<body>
		{ children... }
	</body>
}

templ nav(signedIn bool) {
	<header class="header">
		<div class="width-wrap">
			<div class="header__inside">
				<a href={ templ.SafeURL("/") }>
					<img src="/static/svg/logo.svg" alt="Gooal" class="header__logo"/>
				</a>
				<nav class="header__nav" hx-boost="true">
					if signedIn {
						<a href={ templ.SafeURL("/") }>Home</a>
						<a href={ templ.SafeURL("/my-templates") }>My Templates</a>
						<a href={ templ.SafeURL("/profile") }>My Profile</a>
						<a href={ templ.SafeURL("/logout") }>Logout</a>
					} else {
						<a href={ templ.SafeURL("/register") }>Register</a>
						<a href={ templ.SafeURL("/login") }>Login</a>
					}
				</nav>
			</div>
		</div>
	</header>
}

templ PageBase(flashes views.Flashes, signedIn bool, child templ.Component) {
	@base() {
		@head()
		@body() {
			@nav(signedIn)
			<main class="width-wrap">
				for flashType, flash := range flashes {
					@FlashMessage(flashType, flash)
				}
				@child
			</main>
			@Footer()
		}
	}
}

templ BaseBody(flashes views.Flashes, child templ.Component) {
	@base() {
		@head()
		@body() {
			<main class="width-wrap">
				<h1>Chronologger</h1>
				for flashType, flash := range flashes {
					@FlashMessage(flashType, flash)
				}
				@child
			</main>
		}
	}
}

templ FlashMessage(flashType views.FlashType, flashes []string) {
	for _, flash := range flashes {
		<div class={ fmt.Sprintf("flash flash_%v", flashType) }>
			<h1>{ fmt.Sprintf("%v", flashType) }</h1>
			<p>{ fmt.Sprintf("%v", flash) }</p>
		</div>
	}
}
